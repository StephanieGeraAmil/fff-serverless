service: fff-serverless

frameworkVersion: "3"

provider:
  websocketsApiName: websockets-api
  websocketsApiRouteSelectionExpression: ${request.body.action}
  name: aws
  stage: "dev"
  runtime: nodejs18.x
  region: us-east-1
  environment:
    MONGODB_URI: mongodb+srv://lambda:L4mbd4.@cluster0.ykgrq.mongodb.net/fff?retryWrites=true&w=majority

  

functions:
  create-user:
    handler: src/handler/createUser.createUser
    events:
      - http:
          path: users
          method: post
          cors: true
  get-user:
    handler: src/handler/getUser.getUser
    events:
      - http:
          path: users
          method: get
          cors: true
  update-user:
    handler: src/handler/updateUser.updateUser
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
  delete-user:
    handler: src/handler/deleteUser.deleteUser
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
  OnConnectHandler:
    handler: src/handler/wsConnectionHandler.onConnect
    events:
      - websocket:
          route: $connect
  OnDisconnect:
    handler: src/handler/wsConnectionHandler.onDisconnect
    events:
      - websocket:
          route: $disconnect
  AddConnectionInfo:
    handler: src/handler/wsConnectionHandler.onAddConnectionInfo
    events:
      - websocket:
          route: addConnectionInfo
  ListEvents:
    handler: src/handler/listEvents.listEvents
    events:
      - websocket:
          route: getListEvents
  AddEvent:
    handler: src/handler/addEvent.addEvent
    events:
      - websocket:
          route: addEvent
  UpdateEvent:
    handler: src/handler/updateEvent.updateEvent
    events:
      - websocket:
          route: updateEvent
  DeleteEvent:
    handler: src/handler/deleteEvent.deleteEvent
    events:
      - websocket:
          route: deleteEvent
